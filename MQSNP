-- MoQleShon Network Protocol API by Liltine & Eiryna v1.0

local R_busy = false
local netside = "right"
local messageTable = {}

function CheckOnline()
	if rednet.isOpen(netside) then
		return true
	else
		return false
	end
end

function Send(id, msg)
	local MsgLoop = false
	local ten =  0
	local MsgAkn = false
		
	rednet.send(id,"INC_MSG")
	while (MsgLoop == false) do
		local S_id, S_msg, S_dist = rednet.receive()
		if S_id == id then
			if S_msg == "LIS_MSG" then
				rednet.send(id, msg)
				MsgLoop = true
			elseif S_MSG == "BUSY" then
				ten = ten + 1
				if ten == 5 then 
					MsgAkn = false
				end
				os.sleep(1)
			else
				return false
			end
		else
			rednet.send(id, "BUSY")
			return "Error"
		end
	end
	while MsgLoop do
		S_id, S_msg, S_dist = rednet.receive()
		if S_id == id then
			if S_msg == "RCV_OK" then
				MsgAkn = true
				MsgLoop = false
			else
				MsgAkn = false
			end
		end
	end
	return MsgAkn
end

function Receive()
	local loop = true
	if R_Busy == false then
		local RS_id, RS_msg, RS_dict = rednet.receive()
		if RS_msg = "INC_MSG" then
			R_busy = true
			rednet.send(id, "LIS_MSG")
			while loop do
				local R_id, R_msg, R_dist = rednet.receive()
					rednet.send(id, "RCV_OK")
					R_busy = false
					loop = false
					table.insert (messageTable , textutils.serialize({id=R_id,msg=R_msg}))
				end
			end
		end
	else
		rednet.send(id, "BUSY")
		return "Error"
	end
end

function getMessage()
	msg= table.remove(messageTable, 1)
	return textutils.unserialize(msg)
end

function WhoIs(Name)
	local WISM = {msg = "WHOIS", n=Name, typ="" }
	local S_msg = textutils.serialize(WISM)
	rednet.broadcast(S_msg)
	local R_id, R_msg, R_dist = rednet.receive()
	WIS_id = Receive(R_id)
	return WIS_id
end